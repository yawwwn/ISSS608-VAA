[
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.\nThe task is to reveal the demographic and financial characteristics of the city of Engagement by using appropriate static and interactive statistical graphics methods, using ggplot2, its extensions, as well as tidyverse family of packages."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "title": "Take Home Exercise 1",
    "section": "3.1 Install R Packages",
    "text": "3.1 Install R Packages\n\n\nShow the code\npacman::p_load(ggstatsplot, tidyverse, ggthemes, plotly, corrplot, lubridate, ggpubr, ggrepel, gganimate, ggrepel, knitr, ggridges, ggdist, reshape2, ggstatsplot, treemap, ggiraph, patchwork,cowplot, waffle,ggiraphExtra)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-data",
    "title": "Take Home Exercise 1",
    "section": "3.2 Loading data",
    "text": "3.2 Loading data\n\n\nShow the code\nparticipants &lt;- read_csv(\"data/Participants.csv\")\nfin_journal &lt;- read_csv(\"data/FinancialJournal.csv\")\n\n\n\n3.2.1 Participants Data\n\n\nShow the code\nparticipants\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           &lt;dbl&gt;         &lt;dbl&gt; &lt;lgl&gt;    &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality &lt;dbl&gt;\n\n\n\n\nShow the code\nany(is.na(participants))\n\n\n[1] FALSE\n\n\n\n\nShow the code\n# Convert in to factors\ncol &lt;- c(\"haveKids\",\"educationLevel\",\"interestGroup\", \"householdSize\")\nparticipants &lt;- participants %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(participantId = as.character(participantId))\n\n# Define the custom order of education levels\ncustom_order &lt;- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\n\n# Convert educationLevel to a factor with custom order\nparticipants$educationLevel &lt;- factor(participants$educationLevel, levels = custom_order)\n\n\n\n\nShow the code\nparticipants\n\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n   &lt;chr&gt;         &lt;fct&gt;         &lt;fct&gt;    &lt;dbl&gt; &lt;fct&gt;               &lt;fct&gt;        \n 1 0             3             TRUE        36 HighSchoolOrCollege H            \n 2 1             3             TRUE        25 HighSchoolOrCollege B            \n 3 2             3             TRUE        35 HighSchoolOrCollege A            \n 4 3             3             TRUE        21 HighSchoolOrCollege I            \n 5 4             3             TRUE        43 Bachelors           H            \n 6 5             3             TRUE        32 HighSchoolOrCollege D            \n 7 6             3             TRUE        26 HighSchoolOrCollege I            \n 8 7             3             TRUE        27 Bachelors           A            \n 9 8             3             TRUE        20 Bachelors           G            \n10 9             3             TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality &lt;dbl&gt;\n\n\n\n\n3.2.2 FinancialJournal Data\n\n\nShow the code\nfin_journal\n\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           &lt;dbl&gt; &lt;dttm&gt;              &lt;chr&gt;      &lt;dbl&gt;\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows\n\n\n\n\nShow the code\nany(is.na(fin_journal))\n\n\n[1] FALSE\n\n\nDuplicate check\n\n\nShow the code\nduplicates &lt;- duplicated(fin_journal)\n\n\n\n\nShow the code\ndistinct_months &lt;- unique(fin_journal[duplicates, \"timestamp\"])\ndistinct_months\n\n\n# A tibble: 1 × 1\n  timestamp          \n  &lt;dttm&gt;             \n1 2022-03-01 00:00:00\n\n\nSince all of the duplicated data belongs to the same month, there’s reason to believe they are genuine duplicates.\nRemove duplicates\n\n\nShow the code\nfin_journal_clean &lt;- distinct(fin_journal) %&gt;%\n  mutate(timestamp = floor_date(timestamp, \"month\")) %&gt;%\n  mutate(timestamp = as.Date(timestamp)) %&gt;%\n  mutate(participantId = as.character(participantId))\nfin_journal_clean\n\n\n# A tibble: 1,512,523 × 4\n   participantId timestamp  category  amount\n   &lt;chr&gt;         &lt;date&gt;     &lt;chr&gt;      &lt;dbl&gt;\n 1 0             2022-03-01 Wage      2473. \n 2 0             2022-03-01 Shelter   -555. \n 3 0             2022-03-01 Education  -38.0\n 4 1             2022-03-01 Wage      2047. \n 5 1             2022-03-01 Shelter   -555. \n 6 1             2022-03-01 Education  -38.0\n 7 2             2022-03-01 Wage      2437. \n 8 2             2022-03-01 Shelter   -557. \n 9 2             2022-03-01 Education  -12.8\n10 3             2022-03-01 Wage      2367. \n# ℹ 1,512,513 more rows\n\n\n\n3.2.2.1 Non-pivot Data\nCreating new variables\n\n\nShow the code\nfin_journal_final &lt;- fin_journal_clean %&gt;%\n  mutate(category_type = ifelse(amount &gt;= 0, \"Income\", \"Expenses\"))\nfin_journal_final\n\n\n# A tibble: 1,512,523 × 5\n   participantId timestamp  category  amount category_type\n   &lt;chr&gt;         &lt;date&gt;     &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;        \n 1 0             2022-03-01 Wage      2473.  Income       \n 2 0             2022-03-01 Shelter   -555.  Expenses     \n 3 0             2022-03-01 Education  -38.0 Expenses     \n 4 1             2022-03-01 Wage      2047.  Income       \n 5 1             2022-03-01 Shelter   -555.  Expenses     \n 6 1             2022-03-01 Education  -38.0 Expenses     \n 7 2             2022-03-01 Wage      2437.  Income       \n 8 2             2022-03-01 Shelter   -557.  Expenses     \n 9 2             2022-03-01 Education  -12.8 Expenses     \n10 3             2022-03-01 Wage      2367.  Income       \n# ℹ 1,512,513 more rows\n\n\n\n\nShow the code\ncombined_data &lt;- left_join(fin_journal_final, participants, by = \"participantId\")\ncombined_data\n\n\n# A tibble: 1,512,523 × 11\n   participantId timestamp  category amount category_type householdSize haveKids\n   &lt;chr&gt;         &lt;date&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;chr&gt;         &lt;fct&gt;         &lt;fct&gt;   \n 1 0             2022-03-01 Wage     2473.  Income        3             TRUE    \n 2 0             2022-03-01 Shelter  -555.  Expenses      3             TRUE    \n 3 0             2022-03-01 Educati…  -38.0 Expenses      3             TRUE    \n 4 1             2022-03-01 Wage     2047.  Income        3             TRUE    \n 5 1             2022-03-01 Shelter  -555.  Expenses      3             TRUE    \n 6 1             2022-03-01 Educati…  -38.0 Expenses      3             TRUE    \n 7 2             2022-03-01 Wage     2437.  Income        3             TRUE    \n 8 2             2022-03-01 Shelter  -557.  Expenses      3             TRUE    \n 9 2             2022-03-01 Educati…  -12.8 Expenses      3             TRUE    \n10 3             2022-03-01 Wage     2367.  Income        3             TRUE    \n# ℹ 1,512,513 more rows\n# ℹ 4 more variables: age &lt;dbl&gt;, educationLevel &lt;fct&gt;, interestGroup &lt;fct&gt;,\n#   joviality &lt;dbl&gt;\n\n\n\n\n3.2.2.2 Pivot Data\n\n\nShow the code\n##retry\nfin_journal_clean\n\n\n# A tibble: 1,512,523 × 4\n   participantId timestamp  category  amount\n   &lt;chr&gt;         &lt;date&gt;     &lt;chr&gt;      &lt;dbl&gt;\n 1 0             2022-03-01 Wage      2473. \n 2 0             2022-03-01 Shelter   -555. \n 3 0             2022-03-01 Education  -38.0\n 4 1             2022-03-01 Wage      2047. \n 5 1             2022-03-01 Shelter   -555. \n 6 1             2022-03-01 Education  -38.0\n 7 2             2022-03-01 Wage      2437. \n 8 2             2022-03-01 Shelter   -557. \n 9 2             2022-03-01 Education  -12.8\n10 3             2022-03-01 Wage      2367. \n# ℹ 1,512,513 more rows\n\n\nShow the code\nfin_journal_pivot_test &lt;- fin_journal_clean %&gt;%\n  group_by(participantId, category) %&gt;%\n  summarize(total_amount = sum(amount))%&gt;%\n  pivot_wider(\n    id_cols = c(participantId),\n    names_from = category,\n    values_from = total_amount\n  ) %&gt;%\n  mutate(across(where(is.numeric), ~if_else(is.na(.), 0, .))) %&gt;%\n  \n  ##Sum total expenses and convert to absolute value\n  mutate(total_expenses = abs(Education + Food + Recreation + Shelter)) %&gt;%\n  mutate(total_income = RentAdjustment + Wage) %&gt;%\n  mutate(Expense_ratio = total_expenses/total_income)\nfin_journal_pivot_test\n\n\n# A tibble: 1,011 × 10\n# Groups:   participantId [1,011]\n   participantId Education   Food Recreation Shelter    Wage RentAdjustment\n   &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 0                 -456. -3142.     -4384.  -6660. 109817.              0\n 2 1                 -456. -3167.     -6638.  -6660.  96375.              0\n 3 10                -154. -4741.     -3088.  -6731.  79304.              0\n 4 100                  0  -3696.     -4425.  -7168.  46918.              0\n 5 1000                 0  -5987.     -6467.  -6200.  29293.              0\n 6 1001                 0  -3197.      -212.  -5465.  46234.              0\n 7 1002                 0  -3279.     -3486.  -5477.  27778.              0\n 8 1003                 0  -5270.     -3894.  -5666.  23322.              0\n 9 1004                 0  -3189.     -3001.  -5584.  28012.              0\n10 1005                 0  -5201.     -3960.  -5666.  34022.              0\n# ℹ 1,001 more rows\n# ℹ 3 more variables: total_expenses &lt;dbl&gt;, total_income &lt;dbl&gt;,\n#   Expense_ratio &lt;dbl&gt;\n\n\n\n\nShow the code\nfin_journal_pivot &lt;- fin_journal_clean %&gt;%\n  group_by(participantId, timestamp, category) %&gt;%\n  summarize(total_amount = sum(amount)) %&gt;%\n  pivot_wider(\n    id_cols = c(participantId, timestamp),\n    names_from = category,\n    values_from = total_amount\n  ) %&gt;%\n  mutate(across(where(is.numeric), ~if_else(is.na(.), 0, .)))\nfin_journal_pivot\n\n\n# A tibble: 10,691 × 8\n# Groups:   participantId, timestamp [10,691]\n   participantId timestamp  Education  Food Recreation Shelter   Wage\n   &lt;chr&gt;         &lt;date&gt;         &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1 0             2022-03-01     -38.0 -268.     -349.    -555. 11932.\n 2 0             2022-04-01     -38.0 -266.     -219.    -555.  8637.\n 3 0             2022-05-01     -38.0 -265.     -383.    -555.  9048.\n 4 0             2022-06-01     -38.0 -257.     -466.    -555.  9048.\n 5 0             2022-07-01     -38.0 -270.    -1070.    -555.  8637.\n 6 0             2022-08-01     -38.0 -262.     -314.    -555.  9459.\n 7 0             2022-09-01     -38.0 -256.     -295.    -555.  9048.\n 8 0             2022-10-01     -38.0 -267.      -25.0   -555.  8637.\n 9 0             2022-11-01     -38.0 -261.     -377.    -555.  9048.\n10 0             2022-12-01     -38.0 -266.     -357.    -555.  9048.\n# ℹ 10,681 more rows\n# ℹ 1 more variable: RentAdjustment &lt;dbl&gt;\n\n\n\n\nShow the code\n# Calculate the expected number of months based on the total number of unique months in the dataset\nexpected_months &lt;- n_distinct(fin_journal_pivot$timestamp)\nexpected_months\n\n\n[1] 12\n\n\nShow the code\n# Group the data by participantId and calculate the actual number of months for each participant\nparticipant_months &lt;- fin_journal_pivot %&gt;%\n  group_by(participantId) %&gt;%\n  summarize(actual_months = n_distinct(timestamp))\n\n# Identify participants with missing data\nmissing_participants &lt;- participant_months %&gt;%\n  filter(actual_months != expected_months)\nmissing_participants\n\n\n# A tibble: 131 × 2\n   participantId actual_months\n   &lt;chr&gt;                 &lt;int&gt;\n 1 127                       1\n 2 142                       1\n 3 154                       1\n 4 161                       1\n 5 256                       1\n 6 262                       1\n 7 267                       1\n 8 279                       1\n 9 285                       1\n10 288                       1\n# ℹ 121 more rows\n\n\nShow the code\n#participant_months\n\n\n\n\nShow the code\nfin_journal_pivot_final &lt;- fin_journal_pivot %&gt;%\n  anti_join(missing_participants, by = \"participantId\")\n#kable(fin_journal_final, \"simple\")\n\n\n\n\nShow the code\nfin_journal_pivot_final &lt;- fin_journal_pivot_final %&gt;%\n  select(-matches(\"timestamp\")) %&gt;%\n  group_by(participantId) %&gt;%\n  summarize_at(vars(Education:RentAdjustment),sum) %&gt;%\n  ##Sum total expenses and convert to absolute value\n  mutate(total_expenses = abs(Education + Food + Recreation + Shelter)) %&gt;%\n  mutate(total_income = RentAdjustment + Wage) %&gt;%\n  mutate(Expense_ratio = total_expenses/total_income)\nfin_journal_pivot_final\n\n\n# A tibble: 880 × 10\n   participantId Education   Food Recreation Shelter    Wage RentAdjustment\n   &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 0                 -456. -3142.     -4384.  -6660. 109817.              0\n 2 1                 -456. -3167.     -6638.  -6660.  96375.              0\n 3 10                -154. -4741.     -3088.  -6731.  79304.              0\n 4 100                  0  -3696.     -4425.  -7168.  46918.              0\n 5 1000                 0  -5987.     -6467.  -6200.  29293.              0\n 6 1001                 0  -3197.      -212.  -5465.  46234.              0\n 7 1002                 0  -3279.     -3486.  -5477.  27778.              0\n 8 1003                 0  -5270.     -3894.  -5666.  23322.              0\n 9 1004                 0  -3189.     -3001.  -5584.  28012.              0\n10 1005                 0  -5201.     -3960.  -5666.  34022.              0\n# ℹ 870 more rows\n# ℹ 3 more variables: total_expenses &lt;dbl&gt;, total_income &lt;dbl&gt;,\n#   Expense_ratio &lt;dbl&gt;\n\n\n\n\nShow the code\nNo_of_participants &lt;- n_distinct(fin_journal_pivot_final$participantId)\nNo_of_participants\n\n\n[1] 880\n\n\njoin dataset\n\n\nShow the code\ncombined_pivot_data &lt;- left_join(fin_journal_pivot_final, participants, by = \"participantId\")\ncombined_pivot_data\n\n\n# A tibble: 880 × 16\n   participantId Education   Food Recreation Shelter    Wage RentAdjustment\n   &lt;chr&gt;             &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;          &lt;dbl&gt;\n 1 0                 -456. -3142.     -4384.  -6660. 109817.              0\n 2 1                 -456. -3167.     -6638.  -6660.  96375.              0\n 3 10                -154. -4741.     -3088.  -6731.  79304.              0\n 4 100                  0  -3696.     -4425.  -7168.  46918.              0\n 5 1000                 0  -5987.     -6467.  -6200.  29293.              0\n 6 1001                 0  -3197.      -212.  -5465.  46234.              0\n 7 1002                 0  -3279.     -3486.  -5477.  27778.              0\n 8 1003                 0  -5270.     -3894.  -5666.  23322.              0\n 9 1004                 0  -3189.     -3001.  -5584.  28012.              0\n10 1005                 0  -5201.     -3960.  -5666.  34022.              0\n# ℹ 870 more rows\n# ℹ 9 more variables: total_expenses &lt;dbl&gt;, total_income &lt;dbl&gt;,\n#   Expense_ratio &lt;dbl&gt;, householdSize &lt;fct&gt;, haveKids &lt;fct&gt;, age &lt;dbl&gt;,\n#   educationLevel &lt;fct&gt;, interestGroup &lt;fct&gt;, joviality &lt;dbl&gt;"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#summary-of-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#summary-of-data",
    "title": "Take Home Exercise 1",
    "section": "3.3 Summary of Data",
    "text": "3.3 Summary of Data\nThere are a total of 1,011 participants interviewed. Below list the summary statistics for each of the variables.\n\n\nShow the code\n#quantitative columns to describe\nsel_col &lt;- c(\"householdSize\", \"age\", \"joviality\")\n#filter dataset\nsel_data &lt;- participants %&gt;%\n  select(all_of(sel_col))\npsych::describe(sel_data)\n\n\n               vars    n  mean    sd median trimmed   mad min max range  skew\nhouseholdSize*    1 1011  1.96  0.79   2.00    1.96  1.48   1   3     2  0.06\nage               2 1011 39.07 12.38  39.00   39.09 16.31  18  60    42 -0.01\njoviality         3 1011  0.49  0.29   0.48    0.49  0.37   0   1     1  0.08\n               kurtosis   se\nhouseholdSize*    -1.41 0.02\nage               -1.21 0.39\njoviality         -1.23 0.01"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographics",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographics",
    "title": "Take Home Exercise 1",
    "section": "4.1 Demographics",
    "text": "4.1 Demographics\n\nAgeFamily SizeFinancial BehaviorEducation LevelHave KidsOverall Income & Expenses\n\n\n\n\nShow the code\nplot &lt;- ggplot(combined_pivot_data, \n       aes(x = age)) +\n  geom_histogram(binwidth = 5, \n                 fill = \"lightblue\", \n                 color = \"black\") +\n  labs(x = \"Age\", y = \"Count\") +\n  ggtitle(\"Distribution of Age\") +\n  theme_minimal() \n\nprint(plot)\n\n\n\n\n\nShow the code\nprint(as.data.frame(psych::describe(combined_pivot_data$age)))\n\n\n   vars   n     mean       sd median  trimmed     mad min max range      skew\nX1    1 880 39.13068 12.39922     39 39.18608 16.3086  18  60    42 -0.026236\n    kurtosis        se\nX1 -1.214038 0.4179775\n\n\n\n\n\n\nShow the code\n# Calculate the count and percentage\nparticipants_count &lt;- combined_pivot_data %&gt;%\n  group_by(householdSize) %&gt;%\n  summarize(\n    count = n()\n  ) %&gt;% \n  mutate(\n    householdSize = factor(householdSize),  # Convert to factor\n    householdSize_pct = round(count/sum(count)*100)\n  )\n\n# Choose a color palette\ncolor_palette &lt;- scales::brewer_pal(type = \"qual\")(length(unique(participants_count$householdSize)))\n\n# Create the pie chart using ggplot2\npie_chart &lt;- ggplot(participants_count, aes(x = \"\", y = householdSize_pct, fill = householdSize)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  scale_fill_manual(values = color_palette) +\n  geom_text(aes(label = paste0(householdSize_pct, \"%\")), position = position_stack(vjust = 0.5), color = \"white\") +\n  labs(title = \"Proportion of Flat Types in Singapore\") +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Display the pie chart\npie_chart\n\n\n\n\n\n\n\n\n\nShow the code\naverage_participant &lt;- combined_pivot_data %&gt;%\n  summarize(\n    FoodExpenses = abs(mean(Food)),\n    ShelterExpenses = abs(mean(Shelter)),\n    EducationExpenses = abs(mean(Education)),\n    RecreationExpenses = abs(mean(Recreation)),\n    Savings = mean(Wage + RentAdjustment - abs(`Food` + `Shelter`))\n  )\n\n# Calculate the proportions of expenses and savings\nexpenses &lt;- c(average_participant$FoodExpenses, average_participant$ShelterExpenses,average_participant$EducationExpenses, average_participant$RecreationExpenses )\nsavings &lt;- average_participant$Savings\ntotal &lt;- sum(expenses, savings)\nexpenses_prop &lt;- expenses / total\nsavings_prop &lt;- savings / total\n\n# Create a data frame for waffle chart\nwaffle_data &lt;- data.frame(\n  category = c(\"Food Expenses\", \"Shelter Expenses\", \"Education\", \"Recreation\", \"Savings\"),\n  total = c(expenses,savings),\n  proportion = c(expenses_prop, savings_prop)\n)\n\nlegend_labels &lt;- c(\"Food Expenses\", \"Shelter Expenses\", \"Education\", \"Recreation\", \"Savings\")\n\nwaffle_chart &lt;- waffle(waffle_data$proportion*100, rows = 10, size = 1,\n                       colors = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\", \"#FFB621\"),\n                       title = \"Average Participant Financial Breakdown\",\n                       pad = 0.3)\nwaffle_chart\n\n\n\n\n\n\n\n\n\nShow the code\n# Calculate the count for each education level\neducation_count &lt;- combined_pivot_data %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarize(count = n())\n\n# Order the education levels by count\neducation_count &lt;- education_count[order(education_count$count, decreasing = TRUE), ]\n\n# Create the stacked bar chart using ggplot2\nstacked_bar_chart &lt;- ggplot(education_count, aes(x = \"\", y = count, fill = educationLevel, tooltip = count)) +\n  geom_bar_interactive(stat = \"identity\", width = 1, color = \"white\") +\n  coord_flip() +\n  scale_fill_viridis_d() +\n  labs(title = \"Education Level Breakdown\",\n       x = NULL, y = \"Count\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n# Display the stacked bar chart\ngirafe(ggobj = stacked_bar_chart,\n       width_svg = 6,\n  height_svg = 6*0.618)\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data=combined_pivot_data, \n       aes(x=haveKids)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_income)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  ggtitle(\"Distribution of Annual Income\")\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_expenses)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  ggtitle(\"Distribution of Annual Expenses\")\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = Expense_ratio)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Expenses\")\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot,tidyverse)\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n#set.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"all\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-models",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-models",
    "title": "Hands-on_Ex04",
    "section": "Visualising models",
    "text": "Visualising models\n\npacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\",\"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "title": "Hands-on_Ex03_2",
    "section": "",
    "text": "pacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\nglobalPop\n\n# A tibble: 6,204 × 6\n   Country      Year Young   Old Population Continent\n   &lt;fct&gt;       &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt; &lt;fct&gt;    \n 1 Afghanistan  1996  83.6   4.5     21560. Asia     \n 2 Afghanistan  1998  84.1   4.5     22913. Asia     \n 3 Afghanistan  2000  84.6   4.5     23898. Asia     \n 4 Afghanistan  2002  85.1   4.5     25268. Asia     \n 5 Afghanistan  2004  84.5   4.5     28514. Asia     \n 6 Afghanistan  2006  84.3   4.6     31057  Asia     \n 7 Afghanistan  2008  84.1   4.6     32738. Asia     \n 8 Afghanistan  2010  83.7   4.6     34505. Asia     \n 9 Afghanistan  2012  82.9   4.6     36416. Asia     \n10 Afghanistan  2014  82.1   4.7     38327. Asia     \n# ℹ 6,194 more rows\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +\n  ease_aes('linear')\n\n\n\n\n\ngg &lt;-ggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year), \n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In-Class_Ex04",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse)\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot",
    "title": "In-Class_Ex04",
    "section": "Plot",
    "text": "Plot\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() + #normal distribution\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot-patchwork",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot-patchwork",
    "title": "In-Class_Ex04",
    "section": "Plot (patchwork)",
    "text": "Plot (patchwork)\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() + #normal distribution\n  stat_qq_line()\n\n\n\n\n\nset.seed(1234) #impt esp for variance statistics. to not change values everytime we run\n\n````{r} #"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#income-vs-jovality",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#income-vs-jovality",
    "title": "Take Home Exercise 1",
    "section": "Income vs Jovality",
    "text": "Income vs Jovality\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = joviality)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Income\")\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_income)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Expenses\")\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x= total_income, \n                 y=joviality)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  #coord_cartesian(xlim=c(0,100),\n  #                ylim=c(0,100)) +\n  ggtitle(\"Income vs Expenses\")\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#expenses-vs-jovality",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#expenses-vs-jovality",
    "title": "Take Home Exercise 1",
    "section": "Expenses vs Jovality",
    "text": "Expenses vs Jovality\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = joviality)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Income\")\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_expenses)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Expenses\")\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x= total_expenses, \n                 y=joviality)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  #coord_cartesian(xlim=c(0,100),\n  #                ylim=c(0,100)) +\n  ggtitle(\"Income vs Expenses\")\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#breakdown",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#breakdown",
    "title": "Take Home Exercise 1",
    "section": "Breakdown",
    "text": "Breakdown\n\nIncome vs ExpenseIncome vs JovalityExpenses vs Jovality\n\n\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_income)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Income\")\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_expenses)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  #coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Annual Expenses\")\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x= total_income, \n                 y=total_expenses,\n                 color = educationLevel)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  #coord_cartesian(xlim=c(0,100),\n  #                ylim=c(0,100)) +\n  ggtitle(\"Income vs Expenses\")\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = joviality)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,1)) +\n  ggtitle(\"Distribution of Joviality Score\")\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_income)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  ggtitle(\"Distribution of Annual Income\")\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x= total_income, \n                 y=joviality,\n                 color = educationLevel)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(ylim=c(0,1)) +\n  ggtitle(\"Income vs Joviality\")\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = joviality)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,1)) +\n  ggtitle(\"Distribution of Jovality\")\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_expenses)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  ggtitle(\"Distribution of Annual Expenses\")\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x= total_expenses, \n                 y=joviality,\n                 color = educationLevel)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(ylim=c(0,1)) +\n  ggtitle(\"Expenses vs Joviality\")\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n\n\n\nShow the code\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x= total_expenses, \n                 y=joviality,\n                 color = educationLevel)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(ylim=c(0,1)) +\n  ggtitle(\"Expenses vs Joviality\")\nggplotly(p3)\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_pivot_data,\n  x = age,\n  y = total_expenses,\n  marginal = FALSE,\n  )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#exploratory-data-sets",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#exploratory-data-sets",
    "title": "Take Home Exercise 1",
    "section": "Exploratory Data Sets",
    "text": "Exploratory Data Sets\n\nEducation Level vs WageHousehold Size vs Expenses\n\n\n\n\nShow the code\ncombined_pivot_data &lt;- combined_pivot_data %&gt;%\n  mutate(AgeGroup = cut(age, breaks = c(0,20, 30, 40, 50, 60), labels = c(\"&lt;20\", \"20-30\", \"30-40\", \"40-50\", \"50-60\")))\n\nggplot(combined_pivot_data, \n       aes(y = educationLevel, \n           x = Wage, \n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(scale = 3, \n                      alpha = 0.8\n                      ) +\n  scale_fill_viridis_c(name = \"Wage\",\n                       option = \"turbo\") +\n  labs(x = \"Wage\", \n       y = \"Education Level\", \n       title = \"Distribution of Wage by Education Level at Age Group {closest_state}\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  transition_states(combined_pivot_data$AgeGroup, transition_length = 0, state_length = 1)+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(combined_pivot_data, \n       aes(y = householdSize,\n           x = total_expenses, \n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(scale = 3, \n                      alpha = 0.8\n                      ) +\n  scale_fill_viridis_c(name = \"Expenses\",\n                       option = \"turbo\") +\n  labs(x = \"Expenses\", \n       y = \"Household Size\", \n       title = \"Distribution of Expenses by Household Size at Age Group {closest_state}\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  transition_states(combined_pivot_data$AgeGroup, transition_length = 0, state_length = 1)+\n  theme_minimal()"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#interactive-scatter-plot",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#interactive-scatter-plot",
    "title": "Take Home Exercise 1",
    "section": "Interactive Scatter Plot",
    "text": "Interactive Scatter Plot\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = combined_pivot_data,\n        x = ~total_income,\n        y = ~joviality,\n        hovertemplate = ~paste(\"&lt;br&gt;Total Income\", total_income,\n                               \"&lt;br&gt;Total Expenses:\", total_expenses,\n                               \"&lt;br&gt;Joviality Score:\", joviality),\n        type = 'scatter',\n        mode = 'markers',\n        marker = list(opacity = 0.6,\n                      sizemode = 'diameter',\n                      line = list(width = 0.2, color = 'white'))) |&gt; \n\n#Generating plot, x-axis, and y-axis title\n  layout(title = \"Interactive scatterplot of participants' Total Annual Income vs Joviality Score\",\n         xaxis = list(title = \"Total Annual Inncome\"),\n         yaxis = list(title = \"Joviality Score\"),\n         \n#creating dropwdown menus to allow selection of parameters on x-axis and y-axis \n         updatemenus = list(list(type = \"dropdown\",\n                                 direction = \"up\",\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 yanchor = \"top\",\n                                 x = 1,\n                                 y = 0,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$total_income)),\n                                                    list(xaxis = list(title = \"Total Annual Income\"))),\n                                        label = \"Annual Income\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$total_expenses)),\n                                                    list(xaxis = list(title = \"Total Annual Expenses\"))),\n                                        label = \"Annual Expenses\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(abs(combined_pivot_data$Recreation))),\n                                                    list(xaxis = list(title = \"Recreation Expenses\"))),\n                                        label = \"Recreation Expenses\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$Expense_ratio)),\n                                                    list(xaxis = list(title = \"Expense Ratio\"))),\n                                        label = \"Expense Ratio\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$age)),\n                                                    list(xaxis = list(title = \"Age\"))),\n                                        label = \"Age\")   \n                                   )\n                                 )\n                            )\n         )"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#interactive-boxplot",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#interactive-boxplot",
    "title": "Take Home Exercise 1",
    "section": "Interactive Boxplot",
    "text": "Interactive Boxplot\n\n\nShow the code\n#Initiating the base plot\nplot_ly(data = combined_pivot_data,\n        x = ~AgeGroup,\n        y = ~joviality,\n        line = list(width =1),\n        type = \"violin\",\n        marker = list(opacity = 0.5,\n          line = list(width = 2)),\n        box = list(visible = T),\n        meanline = list(visible = T,\n                        color = \"red\",\n                        width = 2)) |&gt; \n  \n#Generating plot and y-axis title  \n  layout(title = \"Distribution of Joviality by Age Group\",\n         xaxis = list(title = \"Age Group\"),\n         yaxis = list(title = \"Joviality\"),\n         \n#creating dropwdown menus to allow selection of parameters on x-axis \n         updatemenus = list(list(type = 'dropdown',\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$AgeGroup)),\n                                                    list(xaxis = list(title = \"Age Group\"))),\n                                        label = \"Age Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$educationLevel)),\n                                                    list(xaxis = list(title = \"Education Level\")),\n                                                    list(xaxis = list(categoryorder = \"category ascending\"))),\n                                        label = \"Education Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$householdSize)),\n                                                    list(xaxis = list(title = \"Household Size\"))),\n                                        label = \"Household Size\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$haveKids)),\n                                                    list(xaxis = list(title = \"Have Kids\"))),\n                                        label = \"Have Kids?\")\n                              \n                                   )\n                                 )\n                            )\n         )"
  }
]