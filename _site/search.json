[
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggstatsplot,tidyverse)\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n#set.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"all\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-models",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-models",
    "title": "Hands-on_Ex04",
    "section": "Visualising models",
    "text": "Visualising models\n\npacman::p_load(readxl, performance, parameters, see)\n\n\ncar_resale &lt;- read_xls(\"data/ToyotaCorolla.xls\",\"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model    Price Age_08_04 Mfg_Month Mfg_Year     KM Quarterly_Tax Weight\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;         &lt;dbl&gt;  &lt;dbl&gt;\n 1    81 TOYOTA … 18950        25         8     2002  20019           100   1180\n 2     1 TOYOTA … 13500        23        10     2002  46986           210   1165\n 3     2 TOYOTA … 13750        23        10     2002  72937           210   1165\n 4     3  TOYOTA… 13950        24         9     2002  41711           210   1165\n 5     4 TOYOTA … 14950        26         7     2002  48000           210   1165\n 6     5 TOYOTA … 13750        30         3     2002  38500           210   1170\n 7     6 TOYOTA … 12950        32         1     2002  61000           210   1170\n 8     7  TOYOTA… 16900        27         6     2002  94612           210   1245\n 9     8 TOYOTA … 18600        30         3     2002  75889           210   1245\n10    44 TOYOTA … 16950        27         6     2002 110404           234   1255\n# ℹ 1,426 more rows\n# ℹ 29 more variables: Guarantee_Period &lt;dbl&gt;, HP_Bin &lt;chr&gt;, CC_bin &lt;chr&gt;,\n#   Doors &lt;dbl&gt;, Gears &lt;dbl&gt;, Cylinders &lt;dbl&gt;, Fuel_Type &lt;chr&gt;, Color &lt;chr&gt;,\n#   Met_Color &lt;dbl&gt;, Automatic &lt;dbl&gt;, Mfr_Guarantee &lt;dbl&gt;,\n#   BOVAG_Guarantee &lt;dbl&gt;, ABS &lt;dbl&gt;, Airbag_1 &lt;dbl&gt;, Airbag_2 &lt;dbl&gt;,\n#   Airco &lt;dbl&gt;, Automatic_airco &lt;dbl&gt;, Boardcomputer &lt;dbl&gt;, CD_Player &lt;dbl&gt;,\n#   Central_Lock &lt;dbl&gt;, Powered_Windows &lt;dbl&gt;, Power_Steering &lt;dbl&gt;, …\n\n\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "Installing packages\n\npacman::p_load(ggiraph, plotly,\n              patchwork, DT, tidyverse)\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(tooltip = CLASS,\n        data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )    \n)\n\n\n\n\n\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html",
    "title": "Hands-on_Ex03_2",
    "section": "",
    "text": "pacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\nglobalPop\n\n# A tibble: 6,204 × 6\n   Country      Year Young   Old Population Continent\n   &lt;fct&gt;       &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt; &lt;fct&gt;    \n 1 Afghanistan  1996  83.6   4.5     21560. Asia     \n 2 Afghanistan  1998  84.1   4.5     22913. Asia     \n 3 Afghanistan  2000  84.6   4.5     23898. Asia     \n 4 Afghanistan  2002  85.1   4.5     25268. Asia     \n 5 Afghanistan  2004  84.5   4.5     28514. Asia     \n 6 Afghanistan  2006  84.3   4.6     31057  Asia     \n 7 Afghanistan  2008  84.1   4.6     32738. Asia     \n 8 Afghanistan  2010  83.7   4.6     34505. Asia     \n 9 Afghanistan  2012  82.9   4.6     36416. Asia     \n10 Afghanistan  2014  82.1   4.7     38327. Asia     \n# ℹ 6,194 more rows\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +\n  ease_aes('linear')\n\n\n\n\n\ngg &lt;-ggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year), \n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "Check packages\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\nLoad Data\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nggplot(data=exam_data, aes(x = MATHS, y = ENGLISH)) + \n  geom_point() +\n   geom_smooth(method=lm, \n              linewidth=0.5) +\n    geom_label_repel(aes(label = ID)) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n    ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj() +\n  theme(plot.title = element_text(size = 25))\n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n(p1 / p2 | p3) +\nplot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computed. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computed. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#horizontal-bar-chart-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#horizontal-bar-chart-with-theme",
    "title": "Hands-on Exercise 1",
    "section": "Horizontal Bar Chart with theme",
    "text": "Horizontal Bar Chart with theme\n\nggplot(data = exam_data, aes( x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    panel.background = element_rect(fill = \"lightblue\", color = \"lightblue\",\n                                    linewidth = 0.5, linetype = \"solid\"),\n    panel.grid.major = element_line(linewidth = 0.5, linetype = 'solid', colour = \"white\"), \n    panel.grid.minor = element_line(linewidth = 0.25, linetype = 'solid', colour = \"white\"))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#in-class-exercise-makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#in-class-exercise-makeover-1",
    "title": "Hands-on Exercise 1",
    "section": "In-Class Exercise (Makeover #1)",
    "text": "In-Class Exercise (Makeover #1)\n\nggplot(data = exam_data, aes(x=reorder(RACE,RACE,\n                     function(x)-length(x)))) +\n  geom_bar() +\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100, 1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\npupils\")+\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#in-class-exercise-fct_infre",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#in-class-exercise-fct_infre",
    "title": "Hands-on Exercise 1",
    "section": "In-Class Exercise fct_infre()",
    "text": "In-Class Exercise fct_infre()\n\nexam_data %&gt;%\n  mutate(RACE = fct_infreq(RACE)) %&gt;%\n  ggplot(aes(x = RACE)) + \n  geom_bar()+\n  ylim(0,220) +\n  geom_text(stat=\"count\", \n      aes(label=paste0(after_stat(count), \", \", \n      round(after_stat(count)/sum(after_stat(count))*100,\n            1), \"%\")),\n      vjust=-1) +\n  xlab(\"Race\") +\n  ylab(\"No. of\\nPupils\") +\n  theme(axis.title.y=element_text(angle = 0))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html",
    "title": "Take Home Exercise 1",
    "section": "",
    "text": "City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023.\nA sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.\nThe task is to reveal the demographic and financial characteristics of the city of Engagement by using appropriate static and interactive statistical graphics methods, using ggplot2, its extensions, as well as tidyverse family of packages."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#install-r-packages",
    "title": "Take Home Exercise 1",
    "section": "3.1 Install R Packages",
    "text": "3.1 Install R Packages\nThe R packages are installed using pacman::p_load(). Below is a list of main packages installed:\n\ntidyverse: Comprehensive collection of data manipulation and visualization packages.\nplotly: Interactive data visualization package for creating dynamic charts.\nggstatsplot: Enhances ggplot2 with statistical visualization capabilities.\ngganimate: Creates animated plots using ggplot2.\nggrepel: Avoids label overlap in ggplot2 plots.\nggridges: Creates ridgeline plots in ggplot2.\nggiraph: Adds interactivity to ggplot2 plots.\nwaffles: Creates waffle charts for visualizing proportions or percentages.\npatchwork: Combines multiple ggplot2 plots into a single layout.\n\n\npacman::p_load(tidyverse, ggthemes, plotly, lubridate, ggpubr, ggrepel, gganimate, knitr, ggridges, ggdist, reshape2, ggstatsplot, ggiraph, patchwork, waffle,ggiraphExtra)"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#loading-data",
    "title": "Take Home Exercise 1",
    "section": "3.2 Loading data",
    "text": "3.2 Loading data\nImporting both datasets and assigning it to a variable each.\n\nparticipants &lt;- read_csv(\"data/Participants.csv\")\nfin_journal &lt;- read_csv(\"data/FinancialJournal.csv\")\n\n\n3.2.1 Participants Data\nBelow show a snippet of the data\n\nparticipants\n\n# A tibble: 1,011 × 7\n   participantId householdSize haveKids   age educationLevel      interestGroup\n           &lt;dbl&gt;         &lt;dbl&gt; &lt;lgl&gt;    &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;        \n 1             0             3 TRUE        36 HighSchoolOrCollege H            \n 2             1             3 TRUE        25 HighSchoolOrCollege B            \n 3             2             3 TRUE        35 HighSchoolOrCollege A            \n 4             3             3 TRUE        21 HighSchoolOrCollege I            \n 5             4             3 TRUE        43 Bachelors           H            \n 6             5             3 TRUE        32 HighSchoolOrCollege D            \n 7             6             3 TRUE        26 HighSchoolOrCollege I            \n 8             7             3 TRUE        27 Bachelors           A            \n 9             8             3 TRUE        20 Bachelors           G            \n10             9             3 TRUE        35 Bachelors           D            \n# ℹ 1,001 more rows\n# ℹ 1 more variable: joviality &lt;dbl&gt;\n\n\n\n\n3.2.2 FinancialJournal Data\n\nfin_journal\n\n# A tibble: 1,513,636 × 4\n   participantId timestamp           category  amount\n           &lt;dbl&gt; &lt;dttm&gt;              &lt;chr&gt;      &lt;dbl&gt;\n 1             0 2022-03-01 00:00:00 Wage      2473. \n 2             0 2022-03-01 00:00:00 Shelter   -555. \n 3             0 2022-03-01 00:00:00 Education  -38.0\n 4             1 2022-03-01 00:00:00 Wage      2047. \n 5             1 2022-03-01 00:00:00 Shelter   -555. \n 6             1 2022-03-01 00:00:00 Education  -38.0\n 7             2 2022-03-01 00:00:00 Wage      2437. \n 8             2 2022-03-01 00:00:00 Shelter   -557. \n 9             2 2022-03-01 00:00:00 Education  -12.8\n10             3 2022-03-01 00:00:00 Wage      2367. \n# ℹ 1,513,626 more rows"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#data-wrangling",
    "title": "Take Home Exercise 1",
    "section": "3.3 Data Wrangling",
    "text": "3.3 Data Wrangling\nThe raw data from both data sets requires additional wrangling and manipulation before they can be processed and analysed further.\n\n3.3.1 Participants Data\nis.na() function is used to check if any values are missing from the participants data set. No values are missing.\n\nany(is.na(participants))\n\n[1] FALSE\n\n\nTo ensure subsequent statistical and categorical data analysis would not encounter problems, it is also best practice to convert variables, especially categorical ones, into factor type.\n\neducationLevel and interestGroup are in chr type and is converted to fctr .\nhaveKids is in lgl boolean type. However, we will also convert to fctr.\nhouseholdSize is in dbl type. While it is technically accurate, it is not useful for analysis. Hence we will convert to fctr type.\nparticipantId will be converted to chr type.\n\n\n\nShow the code\n# Convert variables to factor type\ncol &lt;- c(\"haveKids\",\"educationLevel\",\"interestGroup\", \"householdSize\")\nparticipants &lt;- participants %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(participantId = as.character(participantId))\n\n# Define the custom order of education levels\ncustom_order &lt;- c(\"Low\", \"HighSchoolOrCollege\", \"Bachelors\", \"Graduate\")\n\n# Convert educationLevel to a factor with custom order\nparticipants$educationLevel &lt;- factor(participants$educationLevel, levels = custom_order)\n\n\n\n\n\n\n\n\nTip\n\n\n\nTo ensure better visual representation, we can explicitly specify the order of education level. This can only be done for fctr data type!\n\n\n\n\n3.3.2 FinancialJournal Data\nSimilarly, for FinancialJournal dataset, a is.na() function is performed to check for missing values.\n\nany(is.na(fin_journal))\n\n[1] FALSE\n\n\n\n3.3.2.1 Remove duplicates\nNext, given that it is a large data set, we shall do a duplicate check using duplicated. There are a total of 1,113 duplicated data.\n\nduplicates &lt;- duplicated(fin_journal)\nsum(duplicates)\n\n[1] 1113\n\n\n\n\n\n\n\n\nCaution\n\n\n\nWhile duplicate checks are important to preserve data integrity, it is important to be careful as not every seemingly duplicated data are duplicates, especially in the absence of a unique id. In the above example, it is also possible for 2 records to be the same but yet distinct in business nature.\n\n\nAs timestamp is the only remotely unique data, we use unique to observe whether duplicated data are sparse across the dates.\n\ndistinct_months &lt;- unique(fin_journal[duplicates, \"timestamp\"])\ndistinct_months\n\n# A tibble: 1 × 1\n  timestamp          \n  &lt;dttm&gt;             \n1 2022-03-01 00:00:00\n\n\nSince all of the duplicated data belongs to the same month, there’s reason to believe they are genuine duplicates.\n\n\n3.3.2.2 Change data type\nAs such, we shall create a new clean data set and name it fin_journal_clean. We would also perform some data wrangling by changing the data types of the variables:\n\nConvert timestamp from POSIXct to date format, keeping only month and year.\n\n\nfin_journal_clean &lt;- distinct(fin_journal) %&gt;%\n  mutate(timestamp = floor_date(timestamp, \"month\")) %&gt;%\n  mutate(timestamp = as.Date(timestamp)) %&gt;%\n  mutate(participantId = as.character(participantId))\n\n\n\n3.3.2.3 Pivot table\nAs the fin_journal_clean table is a long vertical table, we will perform a pivot to a horizontal table where each of the expense categories have its own column.\n\n\nShow the code\n#pivot to horizontal table\nfin_journal_pivot &lt;- fin_journal_clean %&gt;%\n  group_by(participantId, timestamp, category) %&gt;%\n  summarize(total_amount = sum(amount)) %&gt;%\n  pivot_wider(\n    id_cols = c(participantId, timestamp),\n    names_from = category,\n    values_from = total_amount\n  ) %&gt;%\n  #for columns that are numeric, replace NA values with 0\n  mutate(across(where(is.numeric), ~if_else(is.na(.), 0, .)))\n\n\nBelow is a preview of the pivoted table.\n\nfin_journal_pivot\n\n# A tibble: 10,691 × 8\n# Groups:   participantId, timestamp [10,691]\n   participantId timestamp  Education  Food Recreation Shelter   Wage\n   &lt;chr&gt;         &lt;date&gt;         &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;\n 1 0             2022-03-01     -38.0 -268.     -349.    -555. 11932.\n 2 0             2022-04-01     -38.0 -266.     -219.    -555.  8637.\n 3 0             2022-05-01     -38.0 -265.     -383.    -555.  9048.\n 4 0             2022-06-01     -38.0 -257.     -466.    -555.  9048.\n 5 0             2022-07-01     -38.0 -270.    -1070.    -555.  8637.\n 6 0             2022-08-01     -38.0 -262.     -314.    -555.  9459.\n 7 0             2022-09-01     -38.0 -256.     -295.    -555.  9048.\n 8 0             2022-10-01     -38.0 -267.      -25.0   -555.  8637.\n 9 0             2022-11-01     -38.0 -261.     -377.    -555.  9048.\n10 0             2022-12-01     -38.0 -266.     -357.    -555.  9048.\n# ℹ 10,681 more rows\n# ℹ 1 more variable: RentAdjustment &lt;dbl&gt;\n\n\n\n\n3.3.2.4 Missing participants\nBelow, we do a check to ensure that all participants have provided the necessary data. That is, a reasonableness check that for every participant, there should be the same number of months (12) of data.\n\n\nShow the code\n# Calculate the expected number of months based on the total number of unique months in the dataset\nexpected_months &lt;- n_distinct(fin_journal_pivot$timestamp)\nexpected_months\n\n\n[1] 12\n\n\nWe identify and count the number of participants that have less than 12 months of data.\n\n\nShow the code\n# Group the data by participantId and calculate the actual number of months for each participant\nparticipant_months &lt;- fin_journal_pivot %&gt;%\n  group_by(participantId) %&gt;%\n  summarize(actual_months = n_distinct(timestamp))\n\n# Identify participants with missing data\nmissing_participants &lt;- participant_months %&gt;%\n  filter(actual_months &lt; expected_months)\n\n\nThere are total of 113 participants with data missing in some months. It is believed/assumed that they have dropped out of the data collection.\n\ncount(missing_participants)\n\n# A tibble: 1 × 1\n      n\n  &lt;int&gt;\n1   131\n\n\nHence, we shall remove this participants and their data.\n\n\nShow the code\nfin_journal_pivot_final &lt;- fin_journal_pivot %&gt;%\n  anti_join(missing_participants, by = \"participantId\")\n\n\n\n\n3.3.2.5 Final Wrangling\nFinally, we shall perform some final clean-ups. These include:\n\nRemove timestamp column and summarise/group the remaining data. As data are collected upon 12 month period, the time-series data might not be as useful to us. Data can be interpreted on a monthly or annual basis.\nAdding expense categories together to form a new variable called total_expenses\nAdding income categories together to form a new variable called total_income\nCreating a new variable called expense_ratio, which takes total_expenses / total_income\n\n\n\nShow the code\nfin_journal_pivot_final &lt;- fin_journal_pivot_final %&gt;%\n  # removing timestamp column\n  select(-matches(\"timestamp\")) %&gt;%\n  group_by(participantId) %&gt;%\n  summarize_at(vars(Education:RentAdjustment),sum) %&gt;%\n  ##Sum total expenses and convert to absolute value\n  mutate(total_expenses = abs(Education + Food + Recreation + Shelter)) %&gt;%\n  mutate(total_income = RentAdjustment + Wage) %&gt;%\n  mutate(Expense_ratio = total_expenses/total_income)\n\n\n\n\n3.3.2.6 Joining data sets\nFinally, we combine both data sets to form a unified one combined_pivot_data.\n\n\nShow the code\ncombined_pivot_data &lt;- left_join(fin_journal_pivot_final, participants, by = \"participantId\")\n\n\nBelow is a sample of the data:\n\nkable(head(combined_pivot_data), \"simple\")\n\n\n\n\nparticipantId\nEducation\nFood\nRecreation\nShelter\nWage\nRentAdjustment\ntotal_expenses\ntotal_income\nExpense_ratio\nhouseholdSize\nhaveKids\nage\neducationLevel\ninterestGroup\njoviality\n\n\n\n\n0\n-456.0646\n-3141.976\n-4384.0672\n-6659.863\n109816.59\n0\n14641.971\n109816.59\n0.1333311\n3\nTRUE\n36\nHighSchoolOrCollege\nH\n0.0016267\n\n\n1\n-456.0646\n-3167.336\n-6637.5107\n-6659.863\n96374.93\n0\n16920.775\n96374.93\n0.1755724\n3\nTRUE\n25\nHighSchoolOrCollege\nB\n0.3280865\n\n\n10\n-153.7493\n-4741.141\n-3088.0366\n-6730.812\n79303.82\n0\n14713.739\n79303.82\n0.1855363\n3\nTRUE\n48\nHighSchoolOrCollege\nD\n0.5571760\n\n\n100\n0.0000\n-3695.506\n-4425.2218\n-7168.445\n46918.02\n0\n15289.173\n46918.02\n0.3258700\n2\nFALSE\n29\nLow\nF\n0.1426862\n\n\n1000\n0.0000\n-5987.265\n-6466.7517\n-6199.918\n29292.89\n0\n18653.935\n29292.89\n0.6368076\n1\nFALSE\n56\nGraduate\nB\n0.9830125\n\n\n1001\n0.0000\n-3197.202\n-211.6989\n-5464.707\n46233.82\n0\n8873.607\n46233.82\n0.1919289\n1\nFALSE\n49\nGraduate\nC\n0.0434335"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#summary-of-data",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#summary-of-data",
    "title": "Take Home Exercise 1",
    "section": "3.3 Summary of Data",
    "text": "3.3 Summary of Data\nThere are a total of 1,011 participants interviewed. Below list the summary statistics for each of the variables.\n\n\nShow the code\n#quantitative columns to describe\nsel_col &lt;- c(\"householdSize\", \"age\", \"joviality\")\n#filter dataset\nsel_data &lt;- combined_pivot_data %&gt;%\n  select(all_of(sel_col))\npsych::describe(sel_data)\n\n\n               vars   n  mean    sd median trimmed   mad min max range  skew\nhouseholdSize*    1 880  1.90  0.81   2.00    1.87  1.48   1   3     2  0.19\nage               2 880 39.13 12.40  39.00   39.19 16.31  18  60    42 -0.03\njoviality         3 880  0.47  0.29   0.44    0.46  0.35   0   1     1  0.22\n               kurtosis   se\nhouseholdSize*    -1.45 0.03\nage               -1.21 0.42\njoviality         -1.14 0.01"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographics",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#demographics",
    "title": "Take Home Exercise 1",
    "section": "4.1 Demographics",
    "text": "4.1 Demographics\nBelow is a high-level overview of the demographics of participants.\n\nAgeHousehold SizeFinancial BehaviorEducation LevelHave KidsOverall Income & Expenses\n\n\nObservation:\nThe age of the participants are relatively evenly distributed across the age ranges, with lowest being 18 and oldest being 60.\n\n\nShow the code\nplot &lt;- ggplot(combined_pivot_data, \n       aes(x = age)) +\n  geom_histogram(binwidth = 5, \n                 fill = \"lightblue\", \n                 color = \"black\") +\n  labs(x = \"Age\", y = \"No. of Participants\") +\n  ggtitle(\"Distribution of Age\") +\n  theme_minimal() +\n  theme(panel.grid.major.x = element_blank(), #remove vertical gridlines\n        panel.grid.minor.x = element_blank(),\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 14)) \n\nprint(plot)\n\n\n\n\n\nShow the code\nprint(as.data.frame(psych::describe(combined_pivot_data$age)))\n\n\n   vars   n     mean       sd median  trimmed     mad min max range      skew\nX1    1 880 39.13068 12.39922     39 39.18608 16.3086  18  60    42 -0.026236\n    kurtosis        se\nX1 -1.214038 0.4179775\n\n\n\n\nObservation:\n10% more participants live alone than have kids (household size more than 1)\n\n\nShow the code\n# Calculate the count and percentage\nparticipants_count &lt;- combined_pivot_data %&gt;%\n  group_by(householdSize) %&gt;%\n  summarize(\n    count = n()\n  ) %&gt;% \n  mutate(\n    householdSize = factor(householdSize),  # Convert to factor\n    householdSize_pct = round(count/sum(count)*100)\n  )\n\n# Choose a color palette\ncolor_palette &lt;- scales::brewer_pal(type = \"qual\")(length(unique(participants_count$householdSize)))\n\n# Create the pie chart using ggplot2\npie_chart &lt;- ggplot(participants_count, aes(x = \"\", y = householdSize_pct, fill = householdSize)) +\n  geom_bar(stat = \"identity\", width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  scale_fill_manual(values = color_palette, name = 'Household Size') +\n  geom_text(aes(label = paste0(householdSize_pct, \"%\")), position = position_stack(vjust = 0.5), color = \"white\") +\n  labs(title = \"Proportion of Household Sizes among participants\") +\n  theme_void() +\n  theme(plot.title = element_text(face = \"bold\", hjust = 0.5, size = 14))\n\n# Display the pie chart\npie_chart\n\n\n\n\n\n\n\nObservation:\nWe use waffle charts here to illustrate the breakdown of financials by the average participants. Out of total income, most are proportioned to Savings, followed by Shelter expenses, then Recreation, Food and lastly Education.\n\n\nShow the code\naverage_participant &lt;- combined_pivot_data %&gt;%\n  summarize(\n    FoodExpenses = abs(mean(Food)),\n    ShelterExpenses = abs(mean(Shelter)),\n    EducationExpenses = abs(mean(Education)),\n    RecreationExpenses = abs(mean(Recreation)),\n    Savings = mean(Wage + RentAdjustment - abs(`Food` + `Shelter`))\n  )\n\n# Calculate the proportions of expenses and savings\nexpenses &lt;- c(average_participant$FoodExpenses, average_participant$ShelterExpenses,average_participant$EducationExpenses, average_participant$RecreationExpenses )\nsavings &lt;- average_participant$Savings\ntotal &lt;- sum(expenses, savings)\nexpenses_prop &lt;- expenses / total\nsavings_prop &lt;- savings / total\n\n# Create a data frame for waffle chart\nwaffle_data &lt;- data.frame(\n  category = c(\"Food Expenses\", \"Shelter Expenses\", \"Education\", \"Recreation\", \"Savings\"),\n  total = c(expenses,savings),\n  proportion = c(expenses_prop, savings_prop)\n)\n\n# does not work for waffle charts unfortunately\nlegend_labels &lt;- c(\"Food Expenses\", \"Shelter Expenses\", \"Education\", \"Recreation\", \"Savings\")\n\nwaffle_chart &lt;- waffle(waffle_data$proportion*100, rows = 10, size = 1,\n                       colors = c(\"#F8766D\", \"#7CAE00\", \"#00BFC4\", \"#C77CFF\", \"#FFB621\"),\n                       title = list(label = \"Financial Breakdown of\\n Average Participant\", size = 10, face = \"bold\", hjust = 0.5),\n                       pad = 0.3\n)\nwaffle_chart\n\n\n\n\n\n\n\nObservation:\n47.95% of the participants have High School or College degrees whereas 6.56% of participants have low education level.\n\n\n\n\n\n\nTip\n\n\n\nHover over to see the number of participants and percentage breakdown!\n\n\n\n\nShow the code\n# Calculate the count for each education level\neducation_count &lt;- combined_pivot_data %&gt;%\n  group_by(educationLevel) %&gt;%\n  summarize(count = n())\n\n# Order the education levels by count\neducation_count &lt;- education_count[order(education_count$count, decreasing = TRUE), ]\n\n# Calculate percentage\neducation_count &lt;- education_count %&gt;%\n  mutate(percentage = count / sum(count) * 100)\n\n# Create the stacked bar chart using ggplot2\nstacked_bar_chart &lt;- ggplot(education_count, aes(x = \"\", y = count, fill = educationLevel, tooltip = paste(\"No. of Participants:\", count,\"&lt;br&gt;Percentage:\", round(percentage, 2), \"%\"))) +\n  geom_bar_interactive(stat = \"identity\", width = 1, color = \"white\") +\n  coord_flip() +\n  scale_fill_viridis_d(name = 'Household Size') +\n  labs(title = \"Education Level Breakdown\",\n       x = NULL, y = \"Count\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(face = \"bold\", hjust = 0.5, size = 14))\n\n# Display the stacked bar chart\ngirafe(ggobj = stacked_bar_chart,\n       width_svg = 6,\n  height_svg = 6*0.618)\n\n\n\n\n\n\n\n\nObservation:\nMost of the participants do not have kids.\n\n\nShow the code\nggplot(data = combined_pivot_data, aes(x = haveKids)) +\n  geom_bar(fill = \"#00BFC4\", color = \"black\", width = 0.6) +\n  labs(x = \"Have Kids\", y = \"Count\", title = \"Distribution of Participants by whether they have kids\") +\n  theme_minimal() +\n  theme(\n    axis.text = element_text(face = \"bold\", hjust = 0.5, size = 14),\n    axis.title = element_text(size = 14, face = \"bold\"),\n    plot.title = element_text(size = 16, face = \"bold\"),\n    panel.grid.major.y = element_blank()\n  )\n\n\n\n\n\n\n\nObservation:\nAnnual Income is left-skewed - which indicates more of the participants have lower income whereas Annual Expenses seem to follow normal distribution.\n\n\nShow the code\np1 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_income)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  labs(\n    x = \"Total Income\",\n    y = \"Count\",\n    title = \"Distribution of Annual Income\",\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank()\n  )\n\np2 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = total_expenses)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  labs(\n    x = \"Total Expenses\",\n    y = \"Count\",\n    title = \"Distribution of Annual Expenses\",\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank()\n  )\n\np3 &lt;- ggplot(data=combined_pivot_data, \n             aes(x = Expense_ratio)) +\n  geom_histogram(bins = 20, \n                 #boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  labs(\n    x = \"Expenses Ratio\",\n    y = \"Count\",\n    title = \"Distribution of Expense Ratio\",\n  ) +\n  theme_minimal() +\n  theme(\n    panel.grid = element_blank()\n  )\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#exploratory-data-visualisation",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#exploratory-data-visualisation",
    "title": "Take Home Exercise 1",
    "section": "4.2 Exploratory Data Visualisation",
    "text": "4.2 Exploratory Data Visualisation\n\n4.2.1 Ridgeline Plot\nA ridgeline plot is a visualization that displays the distribution of a numeric variable across groups as stacked smoothed curves, helping compare distribution shapes and densities. It provides a compact and visually appealing way to analyze and compare distributions, making it useful for exploring data with multiple categories or groups.\nFrom below, we can observe that:\n\nParticipants with higher education level makes higher wages, and that is consistent across all age groups\nHowever, there is no significant changes in wages at every education level.\nParticipants that live alone (household size = 1) has lower expenses that those with more than 1. However, there is no significant differences between participants with a spouse (household size = 2) and those with kids (household size = 3). In fact, both have the same distribution.\n\n\nEducation Level vs WageHousehold Size vs Expenses\n\n\n\n\nShow the code\ncombined_pivot_data &lt;- combined_pivot_data %&gt;%\n  mutate(AgeGroup = cut(age, breaks = c(0,20, 30, 40, 50, 60), labels = c(\"&lt;20\", \"20-30\", \"30-40\", \"40-50\", \"50-60\")))\n\nggplot(combined_pivot_data, \n       aes(y = educationLevel, \n           x = Wage, \n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(scale = 3, \n                      alpha = 0.8\n                      ) +\n  scale_fill_viridis_c(name = \"Wage\",\n                       option = \"turbo\") +\n  labs(x = \"Wage\", \n       y = \"Education Level\", \n       title = \"Distribution of Wage by Education Level at Age Group {closest_state}\") +\n  \n  theme(legend.position=\"none\",\n  plot.title = element_text(face = \"bold\", size = 12),\n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  transition_states(combined_pivot_data$AgeGroup, transition_length = 0, state_length = 1)+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(combined_pivot_data, \n       aes(y = householdSize,\n           x = total_expenses, \n           fill = after_stat(x))) +\n  geom_density_ridges_gradient(scale = 3, \n                      alpha = 0.8\n                      ) +\n  scale_fill_viridis_c(name = \"Expenses\",\n                       option = \"turbo\") +\n  labs(x = \"Expenses\", \n       y = \"Household Size\", \n       title = \"Distribution of Expenses by Household Size at Age Group {closest_state}\") +\n  \n  theme(legend.position=\"none\",\n  text = element_text(family = \"Garamond\"),\n  plot.title = element_text(face = \"bold\", size = 12),\n  axis.title.x = element_text(size = 10, hjust = 1),\n  axis.title.y = element_text(size = 10),\n  axis.text = element_text(size = 8)) +\n  \n  transition_states(combined_pivot_data$AgeGroup, transition_length = 0, state_length = 1)+\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n4.2.2 Interactive Scatter Plot\nScatter plots display the relationship between two continuous variables as a collection of individual data points on a two-dimensional plane. The below visualisation focus on Joviality score as the y-axis variable, to observe the relationship with other variables. It allows the City Planners to select the x-axis of the variables they wish to study.\nFor x-axis, we selected Annual Income, Annual Expense, Recreation Expenses, Expense Ratio, and Age. This is to discover patterns of user’s financial behavior versus their happiness level. Recreation Expenses is the only expense category chosen as it is assumed that it is the only one which doesn’t cover the basic needs (according to Maslow’s Hierarchy of Needs!).\nAs the below scatterplot is only plotted for visualisation and not for statistical inquiries (which we would do below at a later section!), plot_ly is used to prepare the interactive plot.\nIn order to prepare a dynamic chart for users to interact and change the variables, updatemenus argument is parsed.\nUsers can also hover over the plots to see the tooltip.\n\n\nShow the code\n#Base plot\nplot_ly(data = combined_pivot_data,\n        x = ~total_income,\n        y = ~joviality,\n        hovertemplate = ~paste(\"&lt;br&gt;Age:\", age,\n                               \"&lt;br&gt;Total Income\", total_income,\n                               \"&lt;br&gt;Total Expenses:\", total_expenses,\n                               \"&lt;br&gt;Expense Ratio:\", Expense_ratio),\n        type = 'scatter',\n        mode = 'markets',\n        marker = list(opacity = 0.7,\n                      color = '#00BFC4',\n                      line = list(width = 0.2, color = 'white'))) |&gt; \n\n  layout(title = list(text=\"&lt;b&gt;Interactive scatterplot of participants'\\nTotal Annual Income vs Joviality Score&lt;/b&gt;\", font = list(size = 14)),\n         xaxis = list(title = \"Total Annual Inncome\"),\n         yaxis = list(title = \"Joviality Score\"),\n         \n#creating dropwdown menus to allow selection of parameters on x-axis and y-axis \n         updatemenus = list(list(type = \"dropdown\",\n                                 direction = \"up\",\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 yanchor = \"top\",\n                                 x = 1,\n                                 y = 0,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$total_income)),\n                                                    list(xaxis = list(title = \"Total Annual Income\"))),\n                                        label = \"Annual Income\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$total_expenses)),\n                                                    list(xaxis = list(title = \"Total Annual Expenses\"))),\n                                        label = \"Annual Expenses\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(abs(combined_pivot_data$Recreation))),\n                                                    list(xaxis = list(title = \"Recreation Expenses\"))),\n                                        label = \"Recreation Expenses\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$Expense_ratio)),\n                                                    list(xaxis = list(title = \"Expense Ratio\"))),\n                                        label = \"Expense Ratio\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$age)),\n                                                    list(xaxis = list(title = \"Age\"))),\n                                        label = \"Age\")   \n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\nFrom above, we can observe and draw following insights:\n\nAnnual Income has no positive correlation (in fact, somewhat negative!) with Joviality Score. In fact, participants that are drawing high income have lower joviality score.\nTotal Expenses, Recreation Expenses and Expense Ratio have positive correlation with Joviality Score.\nThere are no correlation between Age and Joviality Score.\n\n\n\n4.2.3 Interactive Violin plot\nA Violin plot, is a graphical representation of the distribution of a continuous variable through quartiles. It is generally used to discover relationship between continuous and discrete variables, and allow for the visualisation of kernel density.\nThe below visualisation also allow City Planners to select the x-axis and y-axis they intend to study.\nFor y-axis, Joviality, Total Annual Income and Expense Ratio are chosen. For x-axis, categorical and discrete variables are chosen. These include Age Group, Education Level, Household size, whether participants Have Kids?, Income Level, and Interest Group.\nIncome Level is a new variable that is added to the data set. It is derived by breaking down the Total Annual Income of participants into 4 different quantiles, and respectively named as {“Low”, “Medium”, “High”, “Very High”}.\nSimilar to the scatterplot, plot_ly is used to prepare the interactive plot.\n\n\nShow the code\n# Define the income levels based on quantiles\nincome_levels &lt;- quantile(combined_pivot_data$total_income, probs = c(0, 0.25, 0.5, 0.75, 1))\n\n# Add a new column with income levels\ncombined_pivot_data &lt;- combined_pivot_data %&gt;%\n  mutate(income_level = factor(cut(total_income, breaks = income_levels, include.lowest = TRUE, labels = c(\"Low\", \"Medium\", \"High\", \"Very High\"),ordered = TRUE)))\n\n#Base plot\nplot_ly(data = combined_pivot_data,\n        x = ~AgeGroup,\n        y = ~joviality,\n        line = list(width =1),\n        type = \"violin\",\n        marker = list(opacity = 0.5,\n          line = list(width = 2)),\n        box = list(visible = T),\n        meanline = list(visible = T,\n                        color = \"red\",\n                        width = 2)) |&gt; \n  \n  layout(title = list(text=\"&lt;b&gt;Distribution of Joviality by Age Group&lt;/b&gt;\", font = list(size = 14)),\n         xaxis = list(title = \"Total Annual Inncome\"),\n         yaxis = list(title = \"Joviality Score\"),\n         \n#creating dropwdown menus to allow selection of parameters on x-axis \n         updatemenus = list(list(type = 'dropdown',\n                                 direction = 'up',\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 yanchor = \"top\",\n                                 x = 1,\n                                 y = 0,\n                                 buttons = \n                                   list(\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$AgeGroup)),\n                                                    list(xaxis = list(title = \"Age Group\"))),\n                                        label = \"Age Group\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$educationLevel)),\n                                                    list(xaxis = list(title = \"Education Level\", categoryorder = \"mean ascending\"))),                                        label = \"Education Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$householdSize)),\n                                                    list(xaxis = list(title = \"Household Size\"))),\n                                        label = \"Household Size\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$haveKids)),\n                                                    list(xaxis = list(title = \"Have Kids\"))),\n                                        label = \"Have Kids?\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$income_level)),\n                                                    list(xaxis = list(title = \"Income Level\", categoryorder = \"mean descending\"))),\n                                        label = \"Income Level\"),\n                                   list(method = \"update\",\n                                        args = list(list(x = list(combined_pivot_data$interestGroup)),\n                                                    list(xaxis = list(title = \"Interest Group\", categoryorder = \"mean descending\"))),\n                                        label = \"Interest Group\")\n                                   \n                            \n                                 )\n                                 ),\n                            list(type = \"dropdown\",\n                                 xref = \"paper\",\n                                 yref = \"paper\",\n                                 xanchor = \"left\",\n                                 yanchor = \"top\",\n                                 x = 0,\n                                 y = 1.05,\n                                 buttons = list(\n                                   list(method = \"update\",\n                                        args = list(list(y = list(combined_pivot_data$joviality)),\n                                                    list(yaxis = list(title = \"Joviality\", categoryorder = \"category ascending\"))),\n                                        label = \"Joviality\"),\n                                   list(method = \"update\",\n                                        args = list(list(y = list(combined_pivot_data$Expense_ratio)),\n                                                    list(yaxis = list(title = \"Expense Ratio\"))),\n                                        label = \"Expense Ratio\"),\n                                   list(method = \"update\",\n                                        args = list(list(y = list(combined_pivot_data$total_income)),\n                                                    list(yaxis = list(title = \"Total Annual Income\"))),\n                                        label = \"Total Annual Income\")\n                                   )\n                                 )\n                            )\n         )\n\n\n\n\n\n\nFrom above, we can observe and draw following insights:\n\nFor Joviality Score, there is minimal difference between the means/medians when plotted against all other variables except Education Level. The violin plot reveals lower mean/median for Jovality Score for higher education levels compared to lower one.\nFor Expense Ratio, similarly, there is minimal difference between the means/medians of most variables. In this case, only Education Level and Income Level was observed to have largely different means/medians across the group. Participants with low Education Level have higher expense ratio mean/median that those with higher Education Level. The other observation is that among the participants, those with very high Income Level had much lower mean/median expense ratio, indicating a much higher saving ratio that those with low Income Level, which could indicate that those with high spending power are not spending as much as they are expected to.\nFor Total Annual Income, there’s no surprise that again, only when plotted against Education Level did we observe a difference in means/medians of the groups. Participants with higher Education Level earned more on a annual basis than those with low Education Level. Those with low education level has much lower variance, whereas those with high education level observed wider variances."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-uncertainty",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#visualising-uncertainty",
    "title": "Take Home Exercise 1",
    "section": "4.3 Visualising Uncertainty",
    "text": "4.3 Visualising Uncertainty\nVisualizing uncertainty in data is a challenging task in data visualization. Often, we interpret data points as precise representations of true values, neglecting the inherent uncertainty. Hence, it is important to note these uncertainties either in error bars or confidence bands.\nThe below visualisation uses stat_pointinterval() of ggdist package to build a visual of displaying distribution of different variables.\nBased on the insights and observation from the above exploratory data visualization, we selected the key variables such as Education Level, Total Income, Total Expense and Expense Ratio to visualise the uncertainties.\n\nEducation Level vs Total IncomeEducation Level vs Expense RatioIncome Level vs JovialityInterest Group vs Recreation Expenses\n\n\n\n\nShow the code\ncombined_pivot_data %&gt;%\n  ggplot(aes(x = educationLevel, \n             y = total_income)) +\n  \n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = mean,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n  \n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkgreen\"),\n    aesthetics = \"interval_color\") +\n  \n  labs(\n    title = \"Visualising uncertainty in mean estimates of Total Annual income\\nby Education Level\",\n    subtitle = \"95% and 99% quantiles intervals at mean point\",\n    x = \"Education level\",\n    y = \"Annual Income\") +\n  \n   theme_minimal() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 10),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\ncombined_pivot_data %&gt;%\n  ggplot(aes(x = educationLevel, \n             y = Expense_ratio)) +\n  \n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = mean,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n  \n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkgreen\"),\n    aesthetics = \"interval_color\") +\n  \n  labs(\n    title = \"Visualising uncertainty in mean estimates of Total Annual income\\nby Education Level\",\n    subtitle = \"95% and 99% quantiles intervals at mean point\",\n    x = \"Education level\",\n    y = \"Expense Ratio\") +\n  \n   theme_minimal() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 10),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\ncombined_pivot_data %&gt;%\n  ggplot(aes(x = income_level, \n             y = joviality)) +\n  \n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = mean,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n  \n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkgreen\"),\n    aesthetics = \"interval_color\") +\n  \n  labs(\n    title = \"Visualising uncertainty in mean estimates of Total Annual income\\nby Education Level\",\n    subtitle = \"95% and 99% quantiles intervals at mean point\",\n    x = \"Income level\",\n    y = \"Joviality\") +\n  \n   theme_minimal() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 10),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\n\nShow the code\ncombined_pivot_data %&gt;%\n  ggplot(aes(x = interestGroup, \n             y = Recreation)) +\n  \n  stat_pointinterval(\n    aes(interval_color = stat(level)),\n    .width = c(0.95, 0.99),\n    .point = mean,\n    .interval = qi,\n    point_color = \"darkred\",\n    show.legend = FALSE) +\n  \n  #Defining the color of the intervals \n  scale_color_manual(\n    values = c(\"blue2\", \"darkgreen\"),\n    aesthetics = \"interval_color\") +\n  \n  labs(\n    title = \"Visualising uncertainty in mean estimates of Total Annual income\\nby Education Level\",\n    subtitle = \"95% and 99% quantiles intervals at mean point\",\n    x = \"Interest Group\",\n    y = \"Recreation\") +\n  \n   theme_minimal() +\n  \n  theme(plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 10),\n        axis.text.x = element_text(hjust = 1))\n\n\n\n\n\n\n\n\nAs noted from previous section, the only worthy insights drawn here is that higher Education Level have higher uncertainties in terms for Total Annual Income."
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#correlation-analysis",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#correlation-analysis",
    "title": "Take Home Exercise 1",
    "section": "4.4 Correlation Analysis",
    "text": "4.4 Correlation Analysis\nNext, we plot a correlation chart to compare the different variables. The correlation charts illustrate that there is a positive relationship between Total Expenses and Joviality, as well as Recreation Expenses and Joviality, with Total Expenses having a stronger correlation. That is, the more a user spends, the happier they are. This is previously noted in Section 4.2.2 as well. However, there is a weak positive relationship between Income and Recreation Expenses - that is, the intuitive notion that as one’s spending power increases, one would be spending more on recreation activities is not exactly true.\n\nIncome vs Recreation ExpensesRecreation Expenses vs JovialityTotal Expenses vs Joviality\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_pivot_data,\n  x = total_income,\n  y = Recreation,\n  marginal = FALSE,\n  )+\n  \n  theme_minimal() +\n  \n  labs(title = 'Correlation of Income and Recreation Expenses', x = \"Annual Income\", y = \"Recreation Expenses\")\n\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_pivot_data,\n  x = Recreation,\n  y = joviality,\n  marginal = FALSE,\n  ) +\n\n  theme_minimal() +\n  \n  labs(title = 'Correlation of Recreation Expense and Joviality Score', x = \"Recreation Expenses\", y = \"Joviality\")\n\n\n\n\n\nShow the code\n        axis.title = element_text(size = 12, face = \"bold\") +\n  theme(text = element_text(family = \"Garamond\"),\n        plot.title = element_text(hjust = 0.2, size = 15, face = 'bold'))\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = combined_pivot_data,\n  x = total_expenses,\n  y = joviality,\n  marginal = FALSE,\n  ) +\n\n  theme_minimal() +\n  \n  labs(title = 'Correlation of Total Expense and Joviality Score', x = \"Total Expenses\", y = \"Joviality\")\n\n\n\n\n\nShow the code\n        axis.title = element_text(size = 12, face = \"bold\")"
  },
  {
    "objectID": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#further-analysis---low-income-family",
    "href": "Take-Home_Ex/Take-Home_Ex01/Take-Home_Ex01.html#further-analysis---low-income-family",
    "title": "Take Home Exercise 1",
    "section": "4.5 Further analysis - Low Income Family",
    "text": "4.5 Further analysis - Low Income Family\nWe wanted to further look into visualising the expenditures of low income family, as this could be an area of interest for City Planners with regards to awarding grants.\nHence, below, we plot a histogram for each of the expense category, where participants from low-income family spend a percentage of their expenses from.\nThe histogram is plotted with ggplot while the coordinated multiple views is augmented with ggiraph.\n\nHistogramCoordinated Multiple Views\n\n\n\n\nShow the code\n# Filter the dataset for low-income participants\nlow_income_data &lt;- combined_pivot_data[combined_pivot_data$income_level == \"Low\", ]\n\n# Calculate the total expenses for each participant\nlow_income_data$total_expenses &lt;- rowSums(low_income_data[, c(\"Recreation\", \"Shelter\", \"Food\", \"Education\")])\n\n# Calculate the percentage spent on recreation for each participant\nlow_income_data$Recreation_pct &lt;- low_income_data$Recreation / low_income_data$total_expenses * 100\nlow_income_data$Shelter_pct &lt;- low_income_data$Shelter / low_income_data$total_expenses * 100\nlow_income_data$Food_pct &lt;- low_income_data$Food / low_income_data$total_expenses * 100\nlow_income_data$Education_pct &lt;- low_income_data$Education / low_income_data$total_expenses * 100\n\n# Combine the three histograms into one plot\nggplot(low_income_data) +\n  geom_histogram(aes(x = Recreation_pct, fill = \"Recreation\"), binwidth = 5, alpha = 0.5) +\n  geom_histogram(aes(x = Shelter_pct, fill = \"Shelter\"), binwidth = 5, alpha = 0.5) +\n  geom_histogram(aes(x = Food_pct, fill = \"Food\"), binwidth = 5, alpha = 0.5) +\n  geom_histogram(aes(x = Education_pct, fill = \"Education\"), binwidth = 5, alpha = 0.5) +\n  scale_fill_manual(values = c(\"Recreation\" = \"steelblue\", \"Shelter\" = \"orange\", \"Food\" = \"green\", \"Education\" = \"yellow\")) +\n  labs(x = \"Percentage Spent\", y = \"Frequency\", fill = \"Expense Category\") +\n  ggtitle(\"Distribution of Percentage Spent on Expenses (Low Income)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nShow the code\np1 &lt;- ggplot(data=low_income_data, \n       aes(x = Recreation_pct)) +\n  geom_dotplot_interactive(              \n    aes(data_id = participantId),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,60)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=low_income_data, \n       aes(x = Shelter_pct)) +\n  geom_dotplot_interactive(              \n    aes(data_id = participantId),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,60)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\np3 &lt;- ggplot(data=low_income_data, \n       aes(x = Food_pct)) +\n  geom_dotplot_interactive(              \n    aes(data_id = participantId),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(25,80)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\np4 &lt;- ggplot(data=low_income_data, \n       aes(x = Education_pct)) +\n  geom_dotplot_interactive(              \n    aes(data_id = participantId),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,60)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 / p2 | p3 / p4), \n       width_svg = 8,\n       height_svg = 8,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\nFrom the above, we could observe that low income family participants are still allocating a larger proportion of their expenses to Recreation expenses, and more so than food."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html",
    "title": "In-Class_Ex04",
    "section": "",
    "text": "pacman::p_load(rstatix, gt, patchwork, tidyverse)\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot",
    "title": "In-Class_Ex04",
    "section": "Plot",
    "text": "Plot\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() + #normal distribution\n  stat_qq_line()\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nWe can see that the points deviate significantly from the straight diagonal line"
  },
  {
    "objectID": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot-patchwork",
    "href": "In-Class_Ex/In-Class_Ex04/In-Class_Ex04.html#plot-patchwork",
    "title": "In-Class_Ex04",
    "section": "Plot (patchwork)",
    "text": "Plot (patchwork)\n\nThe plotThe code chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam_data,\n       aes(sample=ENGLISH)) +\n  stat_qq() + #normal distribution\n  stat_qq_line()\n\n\n\n\n\nset.seed(1234) #impt esp for variance statistics. to not change values everytime we run\n\n````{r} #"
  }
]